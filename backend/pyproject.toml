[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "seo-bot"
version = "1.0.0"
description = "AI-powered SEO automation platform with intelligent keyword research, content clustering, and performance optimization"
authors = ["SEO Bot Team <hello@seobot.ai>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/your-org/seo-bot"
homepage = "https://seobot.ai"
keywords = ["seo", "keyword-research", "content-optimization", "ai", "marketing"]
packages = [{include = "seo_bot", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
typer = {extras = ["all"], version = "^0.9.0"}
pydantic = {extras = ["email"], version = "^2.5.0"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.23"}
alembic = "^1.13.0"
jinja2 = "^3.1.2"
requests = "^2.31.0"
httpx = "^0.25.2"
pandas = "^2.1.4"
numpy = "^1.26.2"
scikit-learn = "^1.3.2"
sentence-transformers = "^2.2.2"
hdbscan = "^0.8.33"
nltk = "^3.8.1"
spacy = "^3.7.2"
pillow = "^10.1.0"
playwright = "^1.40.0"
beautifulsoup4 = "^4.12.2"
lxml = "^4.9.3"
markdown = "^3.5.1"
python-multipart = "^0.0.6"
structlog = "^23.2.0"
rich = "^13.7.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
celery = "^5.3.4"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
google-api-python-client = "^2.109.0"
google-auth-oauthlib = "^1.1.0"
openai = "^1.3.7"
PyYAML = "^6.0.1"
python-dotenv = "^1.0.0"
click = "^8.1.7"
aiofiles = "^23.2.1"
selenium = "^4.15.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
ruff = "^0.1.7"
mypy = "^1.7.1"
pre-commit = "^3.5.0"
pytest-mock = "^3.12.0"
httpx-mock = "^0.10.0"

[tool.poetry.scripts]
seo-bot = "seo_bot.cli:app"

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]